package cn.scau.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RoomRuleExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table RoomRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table RoomRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table RoomRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RoomRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public RoomRuleExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RoomRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RoomRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RoomRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RoomRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RoomRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RoomRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RoomRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RoomRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RoomRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RoomRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table RoomRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andFromDateIsNull() {
			addCriterion("fromDate is null");
			return (Criteria) this;
		}

		public Criteria andFromDateIsNotNull() {
			addCriterion("fromDate is not null");
			return (Criteria) this;
		}

		public Criteria andFromDateEqualTo(Date value) {
			addCriterionForJDBCDate("fromDate =", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("fromDate <>", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateGreaterThan(Date value) {
			addCriterionForJDBCDate("fromDate >", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fromDate >=", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateLessThan(Date value) {
			addCriterionForJDBCDate("fromDate <", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fromDate <=", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateIn(List<Date> values) {
			addCriterionForJDBCDate("fromDate in", values, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("fromDate not in", values, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fromDate between", value1, value2, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fromDate not between", value1, value2, "fromDate");
			return (Criteria) this;
		}

		public Criteria andToDateIsNull() {
			addCriterion("toDate is null");
			return (Criteria) this;
		}

		public Criteria andToDateIsNotNull() {
			addCriterion("toDate is not null");
			return (Criteria) this;
		}

		public Criteria andToDateEqualTo(Date value) {
			addCriterionForJDBCDate("toDate =", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("toDate <>", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateGreaterThan(Date value) {
			addCriterionForJDBCDate("toDate >", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("toDate >=", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateLessThan(Date value) {
			addCriterionForJDBCDate("toDate <", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("toDate <=", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateIn(List<Date> values) {
			addCriterionForJDBCDate("toDate in", values, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("toDate not in", values, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("toDate between", value1, value2, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("toDate not between", value1, value2, "toDate");
			return (Criteria) this;
		}

		public Criteria andRmTypeIsNull() {
			addCriterion("rmType is null");
			return (Criteria) this;
		}

		public Criteria andRmTypeIsNotNull() {
			addCriterion("rmType is not null");
			return (Criteria) this;
		}

		public Criteria andRmTypeEqualTo(String value) {
			addCriterion("rmType =", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeNotEqualTo(String value) {
			addCriterion("rmType <>", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeGreaterThan(String value) {
			addCriterion("rmType >", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeGreaterThanOrEqualTo(String value) {
			addCriterion("rmType >=", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeLessThan(String value) {
			addCriterion("rmType <", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeLessThanOrEqualTo(String value) {
			addCriterion("rmType <=", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeLike(String value) {
			addCriterion("rmType like", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeNotLike(String value) {
			addCriterion("rmType not like", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeIn(List<String> values) {
			addCriterion("rmType in", values, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeNotIn(List<String> values) {
			addCriterion("rmType not in", values, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeBetween(String value1, String value2) {
			addCriterion("rmType between", value1, value2, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeNotBetween(String value1, String value2) {
			addCriterion("rmType not between", value1, value2, "rmType");
			return (Criteria) this;
		}

		public Criteria andNumIsNull() {
			addCriterion("num is null");
			return (Criteria) this;
		}

		public Criteria andNumIsNotNull() {
			addCriterion("num is not null");
			return (Criteria) this;
		}

		public Criteria andNumEqualTo(Integer value) {
			addCriterion("num =", value, "num");
			return (Criteria) this;
		}

		public Criteria andNumNotEqualTo(Integer value) {
			addCriterion("num <>", value, "num");
			return (Criteria) this;
		}

		public Criteria andNumGreaterThan(Integer value) {
			addCriterion("num >", value, "num");
			return (Criteria) this;
		}

		public Criteria andNumGreaterThanOrEqualTo(Integer value) {
			addCriterion("num >=", value, "num");
			return (Criteria) this;
		}

		public Criteria andNumLessThan(Integer value) {
			addCriterion("num <", value, "num");
			return (Criteria) this;
		}

		public Criteria andNumLessThanOrEqualTo(Integer value) {
			addCriterion("num <=", value, "num");
			return (Criteria) this;
		}

		public Criteria andNumIn(List<Integer> values) {
			addCriterion("num in", values, "num");
			return (Criteria) this;
		}

		public Criteria andNumNotIn(List<Integer> values) {
			addCriterion("num not in", values, "num");
			return (Criteria) this;
		}

		public Criteria andNumBetween(Integer value1, Integer value2) {
			addCriterion("num between", value1, value2, "num");
			return (Criteria) this;
		}

		public Criteria andNumNotBetween(Integer value1, Integer value2) {
			addCriterion("num not between", value1, value2, "num");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table RoomRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table RoomRule
     *
     * @mbg.generated do_not_delete_during_merge Wed Aug 01 16:04:16 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}