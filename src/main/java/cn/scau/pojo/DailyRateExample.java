package cn.scau.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class DailyRateExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table DailyRate
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table DailyRate
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table DailyRate
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DailyRate
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public DailyRateExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DailyRate
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DailyRate
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DailyRate
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DailyRate
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DailyRate
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DailyRate
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DailyRate
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DailyRate
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DailyRate
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table DailyRate
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table DailyRate
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andDdateIsNull() {
			addCriterion("ddate is null");
			return (Criteria) this;
		}

		public Criteria andDdateIsNotNull() {
			addCriterion("ddate is not null");
			return (Criteria) this;
		}

		public Criteria andDdateEqualTo(Date value) {
			addCriterionForJDBCDate("ddate =", value, "ddate");
			return (Criteria) this;
		}

		public Criteria andDdateNotEqualTo(Date value) {
			addCriterionForJDBCDate("ddate <>", value, "ddate");
			return (Criteria) this;
		}

		public Criteria andDdateGreaterThan(Date value) {
			addCriterionForJDBCDate("ddate >", value, "ddate");
			return (Criteria) this;
		}

		public Criteria andDdateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ddate >=", value, "ddate");
			return (Criteria) this;
		}

		public Criteria andDdateLessThan(Date value) {
			addCriterionForJDBCDate("ddate <", value, "ddate");
			return (Criteria) this;
		}

		public Criteria andDdateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ddate <=", value, "ddate");
			return (Criteria) this;
		}

		public Criteria andDdateIn(List<Date> values) {
			addCriterionForJDBCDate("ddate in", values, "ddate");
			return (Criteria) this;
		}

		public Criteria andDdateNotIn(List<Date> values) {
			addCriterionForJDBCDate("ddate not in", values, "ddate");
			return (Criteria) this;
		}

		public Criteria andDdateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ddate between", value1, value2, "ddate");
			return (Criteria) this;
		}

		public Criteria andDdateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ddate not between", value1, value2, "ddate");
			return (Criteria) this;
		}

		public Criteria andRmTypeIsNull() {
			addCriterion("rmType is null");
			return (Criteria) this;
		}

		public Criteria andRmTypeIsNotNull() {
			addCriterion("rmType is not null");
			return (Criteria) this;
		}

		public Criteria andRmTypeEqualTo(String value) {
			addCriterion("rmType =", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeNotEqualTo(String value) {
			addCriterion("rmType <>", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeGreaterThan(String value) {
			addCriterion("rmType >", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeGreaterThanOrEqualTo(String value) {
			addCriterion("rmType >=", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeLessThan(String value) {
			addCriterion("rmType <", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeLessThanOrEqualTo(String value) {
			addCriterion("rmType <=", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeLike(String value) {
			addCriterion("rmType like", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeNotLike(String value) {
			addCriterion("rmType not like", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeIn(List<String> values) {
			addCriterion("rmType in", values, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeNotIn(List<String> values) {
			addCriterion("rmType not in", values, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeBetween(String value1, String value2) {
			addCriterion("rmType between", value1, value2, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeNotBetween(String value1, String value2) {
			addCriterion("rmType not between", value1, value2, "rmType");
			return (Criteria) this;
		}

		public Criteria andRateTypeIsNull() {
			addCriterion("rateType is null");
			return (Criteria) this;
		}

		public Criteria andRateTypeIsNotNull() {
			addCriterion("rateType is not null");
			return (Criteria) this;
		}

		public Criteria andRateTypeEqualTo(String value) {
			addCriterion("rateType =", value, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeNotEqualTo(String value) {
			addCriterion("rateType <>", value, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeGreaterThan(String value) {
			addCriterion("rateType >", value, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeGreaterThanOrEqualTo(String value) {
			addCriterion("rateType >=", value, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeLessThan(String value) {
			addCriterion("rateType <", value, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeLessThanOrEqualTo(String value) {
			addCriterion("rateType <=", value, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeLike(String value) {
			addCriterion("rateType like", value, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeNotLike(String value) {
			addCriterion("rateType not like", value, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeIn(List<String> values) {
			addCriterion("rateType in", values, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeNotIn(List<String> values) {
			addCriterion("rateType not in", values, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeBetween(String value1, String value2) {
			addCriterion("rateType between", value1, value2, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeNotBetween(String value1, String value2) {
			addCriterion("rateType not between", value1, value2, "rateType");
			return (Criteria) this;
		}

		public Criteria andRefRuleIsNull() {
			addCriterion("refRule is null");
			return (Criteria) this;
		}

		public Criteria andRefRuleIsNotNull() {
			addCriterion("refRule is not null");
			return (Criteria) this;
		}

		public Criteria andRefRuleEqualTo(Integer value) {
			addCriterion("refRule =", value, "refRule");
			return (Criteria) this;
		}

		public Criteria andRefRuleNotEqualTo(Integer value) {
			addCriterion("refRule <>", value, "refRule");
			return (Criteria) this;
		}

		public Criteria andRefRuleGreaterThan(Integer value) {
			addCriterion("refRule >", value, "refRule");
			return (Criteria) this;
		}

		public Criteria andRefRuleGreaterThanOrEqualTo(Integer value) {
			addCriterion("refRule >=", value, "refRule");
			return (Criteria) this;
		}

		public Criteria andRefRuleLessThan(Integer value) {
			addCriterion("refRule <", value, "refRule");
			return (Criteria) this;
		}

		public Criteria andRefRuleLessThanOrEqualTo(Integer value) {
			addCriterion("refRule <=", value, "refRule");
			return (Criteria) this;
		}

		public Criteria andRefRuleIn(List<Integer> values) {
			addCriterion("refRule in", values, "refRule");
			return (Criteria) this;
		}

		public Criteria andRefRuleNotIn(List<Integer> values) {
			addCriterion("refRule not in", values, "refRule");
			return (Criteria) this;
		}

		public Criteria andRefRuleBetween(Integer value1, Integer value2) {
			addCriterion("refRule between", value1, value2, "refRule");
			return (Criteria) this;
		}

		public Criteria andRefRuleNotBetween(Integer value1, Integer value2) {
			addCriterion("refRule not between", value1, value2, "refRule");
			return (Criteria) this;
		}

		public Criteria andRateIsNull() {
			addCriterion("rate is null");
			return (Criteria) this;
		}

		public Criteria andRateIsNotNull() {
			addCriterion("rate is not null");
			return (Criteria) this;
		}

		public Criteria andRateEqualTo(Double value) {
			addCriterion("rate =", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateNotEqualTo(Double value) {
			addCriterion("rate <>", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateGreaterThan(Double value) {
			addCriterion("rate >", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateGreaterThanOrEqualTo(Double value) {
			addCriterion("rate >=", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateLessThan(Double value) {
			addCriterion("rate <", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateLessThanOrEqualTo(Double value) {
			addCriterion("rate <=", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateIn(List<Double> values) {
			addCriterion("rate in", values, "rate");
			return (Criteria) this;
		}

		public Criteria andRateNotIn(List<Double> values) {
			addCriterion("rate not in", values, "rate");
			return (Criteria) this;
		}

		public Criteria andRateBetween(Double value1, Double value2) {
			addCriterion("rate between", value1, value2, "rate");
			return (Criteria) this;
		}

		public Criteria andRateNotBetween(Double value1, Double value2) {
			addCriterion("rate not between", value1, value2, "rate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table DailyRate
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DailyRate
     *
     * @mbg.generated do_not_delete_during_merge Wed Aug 01 16:04:16 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}