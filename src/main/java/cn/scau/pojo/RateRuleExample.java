package cn.scau.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class RateRuleExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table RateRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table RateRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table RateRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RateRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public RateRuleExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RateRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RateRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RateRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RateRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RateRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RateRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RateRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RateRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RateRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RateRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table RateRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andFromDateIsNull() {
			addCriterion("fromDate is null");
			return (Criteria) this;
		}

		public Criteria andFromDateIsNotNull() {
			addCriterion("fromDate is not null");
			return (Criteria) this;
		}

		public Criteria andFromDateEqualTo(Date value) {
			addCriterionForJDBCDate("fromDate =", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("fromDate <>", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateGreaterThan(Date value) {
			addCriterionForJDBCDate("fromDate >", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fromDate >=", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateLessThan(Date value) {
			addCriterionForJDBCDate("fromDate <", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("fromDate <=", value, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateIn(List<Date> values) {
			addCriterionForJDBCDate("fromDate in", values, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("fromDate not in", values, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fromDate between", value1, value2, "fromDate");
			return (Criteria) this;
		}

		public Criteria andFromDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("fromDate not between", value1, value2, "fromDate");
			return (Criteria) this;
		}

		public Criteria andToDateIsNull() {
			addCriterion("toDate is null");
			return (Criteria) this;
		}

		public Criteria andToDateIsNotNull() {
			addCriterion("toDate is not null");
			return (Criteria) this;
		}

		public Criteria andToDateEqualTo(Date value) {
			addCriterionForJDBCDate("toDate =", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateNotEqualTo(Date value) {
			addCriterionForJDBCDate("toDate <>", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateGreaterThan(Date value) {
			addCriterionForJDBCDate("toDate >", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("toDate >=", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateLessThan(Date value) {
			addCriterionForJDBCDate("toDate <", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("toDate <=", value, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateIn(List<Date> values) {
			addCriterionForJDBCDate("toDate in", values, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateNotIn(List<Date> values) {
			addCriterionForJDBCDate("toDate not in", values, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("toDate between", value1, value2, "toDate");
			return (Criteria) this;
		}

		public Criteria andToDateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("toDate not between", value1, value2, "toDate");
			return (Criteria) this;
		}

		public Criteria andRateTypeIsNull() {
			addCriterion("rateType is null");
			return (Criteria) this;
		}

		public Criteria andRateTypeIsNotNull() {
			addCriterion("rateType is not null");
			return (Criteria) this;
		}

		public Criteria andRateTypeEqualTo(String value) {
			addCriterion("rateType =", value, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeNotEqualTo(String value) {
			addCriterion("rateType <>", value, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeGreaterThan(String value) {
			addCriterion("rateType >", value, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeGreaterThanOrEqualTo(String value) {
			addCriterion("rateType >=", value, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeLessThan(String value) {
			addCriterion("rateType <", value, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeLessThanOrEqualTo(String value) {
			addCriterion("rateType <=", value, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeLike(String value) {
			addCriterion("rateType like", value, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeNotLike(String value) {
			addCriterion("rateType not like", value, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeIn(List<String> values) {
			addCriterion("rateType in", values, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeNotIn(List<String> values) {
			addCriterion("rateType not in", values, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeBetween(String value1, String value2) {
			addCriterion("rateType between", value1, value2, "rateType");
			return (Criteria) this;
		}

		public Criteria andRateTypeNotBetween(String value1, String value2) {
			addCriterion("rateType not between", value1, value2, "rateType");
			return (Criteria) this;
		}

		public Criteria andRmTypeIsNull() {
			addCriterion("rmType is null");
			return (Criteria) this;
		}

		public Criteria andRmTypeIsNotNull() {
			addCriterion("rmType is not null");
			return (Criteria) this;
		}

		public Criteria andRmTypeEqualTo(String value) {
			addCriterion("rmType =", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeNotEqualTo(String value) {
			addCriterion("rmType <>", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeGreaterThan(String value) {
			addCriterion("rmType >", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeGreaterThanOrEqualTo(String value) {
			addCriterion("rmType >=", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeLessThan(String value) {
			addCriterion("rmType <", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeLessThanOrEqualTo(String value) {
			addCriterion("rmType <=", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeLike(String value) {
			addCriterion("rmType like", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeNotLike(String value) {
			addCriterion("rmType not like", value, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeIn(List<String> values) {
			addCriterion("rmType in", values, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeNotIn(List<String> values) {
			addCriterion("rmType not in", values, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeBetween(String value1, String value2) {
			addCriterion("rmType between", value1, value2, "rmType");
			return (Criteria) this;
		}

		public Criteria andRmTypeNotBetween(String value1, String value2) {
			addCriterion("rmType not between", value1, value2, "rmType");
			return (Criteria) this;
		}

		public Criteria andMonIsNull() {
			addCriterion("mon is null");
			return (Criteria) this;
		}

		public Criteria andMonIsNotNull() {
			addCriterion("mon is not null");
			return (Criteria) this;
		}

		public Criteria andMonEqualTo(Boolean value) {
			addCriterion("mon =", value, "mon");
			return (Criteria) this;
		}

		public Criteria andMonNotEqualTo(Boolean value) {
			addCriterion("mon <>", value, "mon");
			return (Criteria) this;
		}

		public Criteria andMonGreaterThan(Boolean value) {
			addCriterion("mon >", value, "mon");
			return (Criteria) this;
		}

		public Criteria andMonGreaterThanOrEqualTo(Boolean value) {
			addCriterion("mon >=", value, "mon");
			return (Criteria) this;
		}

		public Criteria andMonLessThan(Boolean value) {
			addCriterion("mon <", value, "mon");
			return (Criteria) this;
		}

		public Criteria andMonLessThanOrEqualTo(Boolean value) {
			addCriterion("mon <=", value, "mon");
			return (Criteria) this;
		}

		public Criteria andMonIn(List<Boolean> values) {
			addCriterion("mon in", values, "mon");
			return (Criteria) this;
		}

		public Criteria andMonNotIn(List<Boolean> values) {
			addCriterion("mon not in", values, "mon");
			return (Criteria) this;
		}

		public Criteria andMonBetween(Boolean value1, Boolean value2) {
			addCriterion("mon between", value1, value2, "mon");
			return (Criteria) this;
		}

		public Criteria andMonNotBetween(Boolean value1, Boolean value2) {
			addCriterion("mon not between", value1, value2, "mon");
			return (Criteria) this;
		}

		public Criteria andTueIsNull() {
			addCriterion("tue is null");
			return (Criteria) this;
		}

		public Criteria andTueIsNotNull() {
			addCriterion("tue is not null");
			return (Criteria) this;
		}

		public Criteria andTueEqualTo(Boolean value) {
			addCriterion("tue =", value, "tue");
			return (Criteria) this;
		}

		public Criteria andTueNotEqualTo(Boolean value) {
			addCriterion("tue <>", value, "tue");
			return (Criteria) this;
		}

		public Criteria andTueGreaterThan(Boolean value) {
			addCriterion("tue >", value, "tue");
			return (Criteria) this;
		}

		public Criteria andTueGreaterThanOrEqualTo(Boolean value) {
			addCriterion("tue >=", value, "tue");
			return (Criteria) this;
		}

		public Criteria andTueLessThan(Boolean value) {
			addCriterion("tue <", value, "tue");
			return (Criteria) this;
		}

		public Criteria andTueLessThanOrEqualTo(Boolean value) {
			addCriterion("tue <=", value, "tue");
			return (Criteria) this;
		}

		public Criteria andTueIn(List<Boolean> values) {
			addCriterion("tue in", values, "tue");
			return (Criteria) this;
		}

		public Criteria andTueNotIn(List<Boolean> values) {
			addCriterion("tue not in", values, "tue");
			return (Criteria) this;
		}

		public Criteria andTueBetween(Boolean value1, Boolean value2) {
			addCriterion("tue between", value1, value2, "tue");
			return (Criteria) this;
		}

		public Criteria andTueNotBetween(Boolean value1, Boolean value2) {
			addCriterion("tue not between", value1, value2, "tue");
			return (Criteria) this;
		}

		public Criteria andWedIsNull() {
			addCriterion("wed is null");
			return (Criteria) this;
		}

		public Criteria andWedIsNotNull() {
			addCriterion("wed is not null");
			return (Criteria) this;
		}

		public Criteria andWedEqualTo(Boolean value) {
			addCriterion("wed =", value, "wed");
			return (Criteria) this;
		}

		public Criteria andWedNotEqualTo(Boolean value) {
			addCriterion("wed <>", value, "wed");
			return (Criteria) this;
		}

		public Criteria andWedGreaterThan(Boolean value) {
			addCriterion("wed >", value, "wed");
			return (Criteria) this;
		}

		public Criteria andWedGreaterThanOrEqualTo(Boolean value) {
			addCriterion("wed >=", value, "wed");
			return (Criteria) this;
		}

		public Criteria andWedLessThan(Boolean value) {
			addCriterion("wed <", value, "wed");
			return (Criteria) this;
		}

		public Criteria andWedLessThanOrEqualTo(Boolean value) {
			addCriterion("wed <=", value, "wed");
			return (Criteria) this;
		}

		public Criteria andWedIn(List<Boolean> values) {
			addCriterion("wed in", values, "wed");
			return (Criteria) this;
		}

		public Criteria andWedNotIn(List<Boolean> values) {
			addCriterion("wed not in", values, "wed");
			return (Criteria) this;
		}

		public Criteria andWedBetween(Boolean value1, Boolean value2) {
			addCriterion("wed between", value1, value2, "wed");
			return (Criteria) this;
		}

		public Criteria andWedNotBetween(Boolean value1, Boolean value2) {
			addCriterion("wed not between", value1, value2, "wed");
			return (Criteria) this;
		}

		public Criteria andThuIsNull() {
			addCriterion("thu is null");
			return (Criteria) this;
		}

		public Criteria andThuIsNotNull() {
			addCriterion("thu is not null");
			return (Criteria) this;
		}

		public Criteria andThuEqualTo(Boolean value) {
			addCriterion("thu =", value, "thu");
			return (Criteria) this;
		}

		public Criteria andThuNotEqualTo(Boolean value) {
			addCriterion("thu <>", value, "thu");
			return (Criteria) this;
		}

		public Criteria andThuGreaterThan(Boolean value) {
			addCriterion("thu >", value, "thu");
			return (Criteria) this;
		}

		public Criteria andThuGreaterThanOrEqualTo(Boolean value) {
			addCriterion("thu >=", value, "thu");
			return (Criteria) this;
		}

		public Criteria andThuLessThan(Boolean value) {
			addCriterion("thu <", value, "thu");
			return (Criteria) this;
		}

		public Criteria andThuLessThanOrEqualTo(Boolean value) {
			addCriterion("thu <=", value, "thu");
			return (Criteria) this;
		}

		public Criteria andThuIn(List<Boolean> values) {
			addCriterion("thu in", values, "thu");
			return (Criteria) this;
		}

		public Criteria andThuNotIn(List<Boolean> values) {
			addCriterion("thu not in", values, "thu");
			return (Criteria) this;
		}

		public Criteria andThuBetween(Boolean value1, Boolean value2) {
			addCriterion("thu between", value1, value2, "thu");
			return (Criteria) this;
		}

		public Criteria andThuNotBetween(Boolean value1, Boolean value2) {
			addCriterion("thu not between", value1, value2, "thu");
			return (Criteria) this;
		}

		public Criteria andFriIsNull() {
			addCriterion("fri is null");
			return (Criteria) this;
		}

		public Criteria andFriIsNotNull() {
			addCriterion("fri is not null");
			return (Criteria) this;
		}

		public Criteria andFriEqualTo(Boolean value) {
			addCriterion("fri =", value, "fri");
			return (Criteria) this;
		}

		public Criteria andFriNotEqualTo(Boolean value) {
			addCriterion("fri <>", value, "fri");
			return (Criteria) this;
		}

		public Criteria andFriGreaterThan(Boolean value) {
			addCriterion("fri >", value, "fri");
			return (Criteria) this;
		}

		public Criteria andFriGreaterThanOrEqualTo(Boolean value) {
			addCriterion("fri >=", value, "fri");
			return (Criteria) this;
		}

		public Criteria andFriLessThan(Boolean value) {
			addCriterion("fri <", value, "fri");
			return (Criteria) this;
		}

		public Criteria andFriLessThanOrEqualTo(Boolean value) {
			addCriterion("fri <=", value, "fri");
			return (Criteria) this;
		}

		public Criteria andFriIn(List<Boolean> values) {
			addCriterion("fri in", values, "fri");
			return (Criteria) this;
		}

		public Criteria andFriNotIn(List<Boolean> values) {
			addCriterion("fri not in", values, "fri");
			return (Criteria) this;
		}

		public Criteria andFriBetween(Boolean value1, Boolean value2) {
			addCriterion("fri between", value1, value2, "fri");
			return (Criteria) this;
		}

		public Criteria andFriNotBetween(Boolean value1, Boolean value2) {
			addCriterion("fri not between", value1, value2, "fri");
			return (Criteria) this;
		}

		public Criteria andSatIsNull() {
			addCriterion("sat is null");
			return (Criteria) this;
		}

		public Criteria andSatIsNotNull() {
			addCriterion("sat is not null");
			return (Criteria) this;
		}

		public Criteria andSatEqualTo(Boolean value) {
			addCriterion("sat =", value, "sat");
			return (Criteria) this;
		}

		public Criteria andSatNotEqualTo(Boolean value) {
			addCriterion("sat <>", value, "sat");
			return (Criteria) this;
		}

		public Criteria andSatGreaterThan(Boolean value) {
			addCriterion("sat >", value, "sat");
			return (Criteria) this;
		}

		public Criteria andSatGreaterThanOrEqualTo(Boolean value) {
			addCriterion("sat >=", value, "sat");
			return (Criteria) this;
		}

		public Criteria andSatLessThan(Boolean value) {
			addCriterion("sat <", value, "sat");
			return (Criteria) this;
		}

		public Criteria andSatLessThanOrEqualTo(Boolean value) {
			addCriterion("sat <=", value, "sat");
			return (Criteria) this;
		}

		public Criteria andSatIn(List<Boolean> values) {
			addCriterion("sat in", values, "sat");
			return (Criteria) this;
		}

		public Criteria andSatNotIn(List<Boolean> values) {
			addCriterion("sat not in", values, "sat");
			return (Criteria) this;
		}

		public Criteria andSatBetween(Boolean value1, Boolean value2) {
			addCriterion("sat between", value1, value2, "sat");
			return (Criteria) this;
		}

		public Criteria andSatNotBetween(Boolean value1, Boolean value2) {
			addCriterion("sat not between", value1, value2, "sat");
			return (Criteria) this;
		}

		public Criteria andSunIsNull() {
			addCriterion("sun is null");
			return (Criteria) this;
		}

		public Criteria andSunIsNotNull() {
			addCriterion("sun is not null");
			return (Criteria) this;
		}

		public Criteria andSunEqualTo(Boolean value) {
			addCriterion("sun =", value, "sun");
			return (Criteria) this;
		}

		public Criteria andSunNotEqualTo(Boolean value) {
			addCriterion("sun <>", value, "sun");
			return (Criteria) this;
		}

		public Criteria andSunGreaterThan(Boolean value) {
			addCriterion("sun >", value, "sun");
			return (Criteria) this;
		}

		public Criteria andSunGreaterThanOrEqualTo(Boolean value) {
			addCriterion("sun >=", value, "sun");
			return (Criteria) this;
		}

		public Criteria andSunLessThan(Boolean value) {
			addCriterion("sun <", value, "sun");
			return (Criteria) this;
		}

		public Criteria andSunLessThanOrEqualTo(Boolean value) {
			addCriterion("sun <=", value, "sun");
			return (Criteria) this;
		}

		public Criteria andSunIn(List<Boolean> values) {
			addCriterion("sun in", values, "sun");
			return (Criteria) this;
		}

		public Criteria andSunNotIn(List<Boolean> values) {
			addCriterion("sun not in", values, "sun");
			return (Criteria) this;
		}

		public Criteria andSunBetween(Boolean value1, Boolean value2) {
			addCriterion("sun between", value1, value2, "sun");
			return (Criteria) this;
		}

		public Criteria andSunNotBetween(Boolean value1, Boolean value2) {
			addCriterion("sun not between", value1, value2, "sun");
			return (Criteria) this;
		}

		public Criteria andRateIsNull() {
			addCriterion("rate is null");
			return (Criteria) this;
		}

		public Criteria andRateIsNotNull() {
			addCriterion("rate is not null");
			return (Criteria) this;
		}

		public Criteria andRateEqualTo(Double value) {
			addCriterion("rate =", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateNotEqualTo(Double value) {
			addCriterion("rate <>", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateGreaterThan(Double value) {
			addCriterion("rate >", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateGreaterThanOrEqualTo(Double value) {
			addCriterion("rate >=", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateLessThan(Double value) {
			addCriterion("rate <", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateLessThanOrEqualTo(Double value) {
			addCriterion("rate <=", value, "rate");
			return (Criteria) this;
		}

		public Criteria andRateIn(List<Double> values) {
			addCriterion("rate in", values, "rate");
			return (Criteria) this;
		}

		public Criteria andRateNotIn(List<Double> values) {
			addCriterion("rate not in", values, "rate");
			return (Criteria) this;
		}

		public Criteria andRateBetween(Double value1, Double value2) {
			addCriterion("rate between", value1, value2, "rate");
			return (Criteria) this;
		}

		public Criteria andRateNotBetween(Double value1, Double value2) {
			addCriterion("rate not between", value1, value2, "rate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table RateRule
	 * @mbg.generated  Sat Aug 04 20:04:16 CST 2018
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table RateRule
     *
     * @mbg.generated do_not_delete_during_merge Wed Aug 01 16:04:16 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}