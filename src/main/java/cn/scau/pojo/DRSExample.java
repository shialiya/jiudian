package cn.scau.pojo;

import java.util.ArrayList;
import java.sql.Date;
import java.util.Iterator;
import java.util.List;

public class DRSExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table drs
     *
     * @mbg.generated Tue Aug 07 09:44:00 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table drs
     *
     * @mbg.generated Tue Aug 07 09:44:00 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table drs
     *
     * @mbg.generated Tue Aug 07 09:44:00 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table drs
     *
     * @mbg.generated Tue Aug 07 09:44:00 CST 2018
     */
    public DRSExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table drs
     *
     * @mbg.generated Tue Aug 07 09:44:00 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table drs
     *
     * @mbg.generated Tue Aug 07 09:44:00 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table drs
     *
     * @mbg.generated Tue Aug 07 09:44:00 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table drs
     *
     * @mbg.generated Tue Aug 07 09:44:00 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table drs
     *
     * @mbg.generated Tue Aug 07 09:44:00 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table drs
     *
     * @mbg.generated Tue Aug 07 09:44:00 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table drs
     *
     * @mbg.generated Tue Aug 07 09:44:00 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table drs
     *
     * @mbg.generated Tue Aug 07 09:44:00 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table drs
     *
     * @mbg.generated Tue Aug 07 09:44:00 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table drs
     *
     * @mbg.generated Tue Aug 07 09:44:00 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table drs
     *
     * @mbg.generated Tue Aug 07 09:44:00 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andDdateIsNull() {
            addCriterion("ddate is null");
            return (Criteria) this;
        }

        public Criteria andDdateIsNotNull() {
            addCriterion("ddate is not null");
            return (Criteria) this;
        }

        public Criteria andDdateEqualTo(Date value) {
            addCriterionForJDBCDate("ddate =", value, "ddate");
            return (Criteria) this;
        }

        public Criteria andDdateNotEqualTo(Date value) {
            addCriterionForJDBCDate("ddate <>", value, "ddate");
            return (Criteria) this;
        }

        public Criteria andDdateGreaterThan(Date value) {
            addCriterionForJDBCDate("ddate >", value, "ddate");
            return (Criteria) this;
        }

        public Criteria andDdateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ddate >=", value, "ddate");
            return (Criteria) this;
        }

        public Criteria andDdateLessThan(Date value) {
            addCriterionForJDBCDate("ddate <", value, "ddate");
            return (Criteria) this;
        }

        public Criteria andDdateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("ddate <=", value, "ddate");
            return (Criteria) this;
        }

        public Criteria andDdateIn(List<Date> values) {
            addCriterionForJDBCDate("ddate in", values, "ddate");
            return (Criteria) this;
        }

        public Criteria andDdateNotIn(List<Date> values) {
            addCriterionForJDBCDate("ddate not in", values, "ddate");
            return (Criteria) this;
        }

        public Criteria andDdateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ddate between", value1, value2, "ddate");
            return (Criteria) this;
        }

        public Criteria andDdateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("ddate not between", value1, value2, "ddate");
            return (Criteria) this;
        }

        public Criteria andRmTypeIsNull() {
            addCriterion("rmType is null");
            return (Criteria) this;
        }

        public Criteria andRmTypeIsNotNull() {
            addCriterion("rmType is not null");
            return (Criteria) this;
        }

        public Criteria andRmTypeEqualTo(String value) {
            addCriterion("rmType =", value, "rmType");
            return (Criteria) this;
        }

        public Criteria andRmTypeNotEqualTo(String value) {
            addCriterion("rmType <>", value, "rmType");
            return (Criteria) this;
        }

        public Criteria andRmTypeGreaterThan(String value) {
            addCriterion("rmType >", value, "rmType");
            return (Criteria) this;
        }

        public Criteria andRmTypeGreaterThanOrEqualTo(String value) {
            addCriterion("rmType >=", value, "rmType");
            return (Criteria) this;
        }

        public Criteria andRmTypeLessThan(String value) {
            addCriterion("rmType <", value, "rmType");
            return (Criteria) this;
        }

        public Criteria andRmTypeLessThanOrEqualTo(String value) {
            addCriterion("rmType <=", value, "rmType");
            return (Criteria) this;
        }

        public Criteria andRmTypeLike(String value) {
            addCriterion("rmType like", value, "rmType");
            return (Criteria) this;
        }

        public Criteria andRmTypeNotLike(String value) {
            addCriterion("rmType not like", value, "rmType");
            return (Criteria) this;
        }

        public Criteria andRmTypeIn(List<String> values) {
            addCriterion("rmType in", values, "rmType");
            return (Criteria) this;
        }

        public Criteria andRmTypeNotIn(List<String> values) {
            addCriterion("rmType not in", values, "rmType");
            return (Criteria) this;
        }

        public Criteria andRmTypeBetween(String value1, String value2) {
            addCriterion("rmType between", value1, value2, "rmType");
            return (Criteria) this;
        }

        public Criteria andRmTypeNotBetween(String value1, String value2) {
            addCriterion("rmType not between", value1, value2, "rmType");
            return (Criteria) this;
        }

        public Criteria andRateTypeIsNull() {
            addCriterion("rateType is null");
            return (Criteria) this;
        }

        public Criteria andRateTypeIsNotNull() {
            addCriterion("rateType is not null");
            return (Criteria) this;
        }

        public Criteria andRateTypeEqualTo(String value) {
            addCriterion("rateType =", value, "rateType");
            return (Criteria) this;
        }

        public Criteria andRateTypeNotEqualTo(String value) {
            addCriterion("rateType <>", value, "rateType");
            return (Criteria) this;
        }

        public Criteria andRateTypeGreaterThan(String value) {
            addCriterion("rateType >", value, "rateType");
            return (Criteria) this;
        }

        public Criteria andRateTypeGreaterThanOrEqualTo(String value) {
            addCriterion("rateType >=", value, "rateType");
            return (Criteria) this;
        }

        public Criteria andRateTypeLessThan(String value) {
            addCriterion("rateType <", value, "rateType");
            return (Criteria) this;
        }

        public Criteria andRateTypeLessThanOrEqualTo(String value) {
            addCriterion("rateType <=", value, "rateType");
            return (Criteria) this;
        }

        public Criteria andRateTypeLike(String value) {
            addCriterion("rateType like", value, "rateType");
            return (Criteria) this;
        }

        public Criteria andRateTypeNotLike(String value) {
            addCriterion("rateType not like", value, "rateType");
            return (Criteria) this;
        }

        public Criteria andRateTypeIn(List<String> values) {
            addCriterion("rateType in", values, "rateType");
            return (Criteria) this;
        }

        public Criteria andRateTypeNotIn(List<String> values) {
            addCriterion("rateType not in", values, "rateType");
            return (Criteria) this;
        }

        public Criteria andRateTypeBetween(String value1, String value2) {
            addCriterion("rateType between", value1, value2, "rateType");
            return (Criteria) this;
        }

        public Criteria andRateTypeNotBetween(String value1, String value2) {
            addCriterion("rateType not between", value1, value2, "rateType");
            return (Criteria) this;
        }

        public Criteria andRateIsNull() {
            addCriterion("rate is null");
            return (Criteria) this;
        }

        public Criteria andRateIsNotNull() {
            addCriterion("rate is not null");
            return (Criteria) this;
        }

        public Criteria andRateEqualTo(Double value) {
            addCriterion("rate =", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateNotEqualTo(Double value) {
            addCriterion("rate <>", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateGreaterThan(Double value) {
            addCriterion("rate >", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateGreaterThanOrEqualTo(Double value) {
            addCriterion("rate >=", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateLessThan(Double value) {
            addCriterion("rate <", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateLessThanOrEqualTo(Double value) {
            addCriterion("rate <=", value, "rate");
            return (Criteria) this;
        }

        public Criteria andRateIn(List<Double> values) {
            addCriterion("rate in", values, "rate");
            return (Criteria) this;
        }

        public Criteria andRateNotIn(List<Double> values) {
            addCriterion("rate not in", values, "rate");
            return (Criteria) this;
        }

        public Criteria andRateBetween(Double value1, Double value2) {
            addCriterion("rate between", value1, value2, "rate");
            return (Criteria) this;
        }

        public Criteria andRateNotBetween(Double value1, Double value2) {
            addCriterion("rate not between", value1, value2, "rate");
            return (Criteria) this;
        }

        public Criteria andRefRuleIsNull() {
            addCriterion("refRule is null");
            return (Criteria) this;
        }

        public Criteria andRefRuleIsNotNull() {
            addCriterion("refRule is not null");
            return (Criteria) this;
        }

        public Criteria andRefRuleEqualTo(Integer value) {
            addCriterion("refRule =", value, "refRule");
            return (Criteria) this;
        }

        public Criteria andRefRuleNotEqualTo(Integer value) {
            addCriterion("refRule <>", value, "refRule");
            return (Criteria) this;
        }

        public Criteria andRefRuleGreaterThan(Integer value) {
            addCriterion("refRule >", value, "refRule");
            return (Criteria) this;
        }

        public Criteria andRefRuleGreaterThanOrEqualTo(Integer value) {
            addCriterion("refRule >=", value, "refRule");
            return (Criteria) this;
        }

        public Criteria andRefRuleLessThan(Integer value) {
            addCriterion("refRule <", value, "refRule");
            return (Criteria) this;
        }

        public Criteria andRefRuleLessThanOrEqualTo(Integer value) {
            addCriterion("refRule <=", value, "refRule");
            return (Criteria) this;
        }

        public Criteria andRefRuleIn(List<Integer> values) {
            addCriterion("refRule in", values, "refRule");
            return (Criteria) this;
        }

        public Criteria andRefRuleNotIn(List<Integer> values) {
            addCriterion("refRule not in", values, "refRule");
            return (Criteria) this;
        }

        public Criteria andRefRuleBetween(Integer value1, Integer value2) {
            addCriterion("refRule between", value1, value2, "refRule");
            return (Criteria) this;
        }

        public Criteria andRefRuleNotBetween(Integer value1, Integer value2) {
            addCriterion("refRule not between", value1, value2, "refRule");
            return (Criteria) this;
        }

        public Criteria andPrepaidIsNull() {
            addCriterion("prepaid is null");
            return (Criteria) this;
        }

        public Criteria andPrepaidIsNotNull() {
            addCriterion("prepaid is not null");
            return (Criteria) this;
        }

        public Criteria andPrepaidEqualTo(Boolean value) {
            addCriterion("prepaid =", value, "prepaid");
            return (Criteria) this;
        }

        public Criteria andPrepaidNotEqualTo(Boolean value) {
            addCriterion("prepaid <>", value, "prepaid");
            return (Criteria) this;
        }

        public Criteria andPrepaidGreaterThan(Boolean value) {
            addCriterion("prepaid >", value, "prepaid");
            return (Criteria) this;
        }

        public Criteria andPrepaidGreaterThanOrEqualTo(Boolean value) {
            addCriterion("prepaid >=", value, "prepaid");
            return (Criteria) this;
        }

        public Criteria andPrepaidLessThan(Boolean value) {
            addCriterion("prepaid <", value, "prepaid");
            return (Criteria) this;
        }

        public Criteria andPrepaidLessThanOrEqualTo(Boolean value) {
            addCriterion("prepaid <=", value, "prepaid");
            return (Criteria) this;
        }

        public Criteria andPrepaidIn(List<Boolean> values) {
            addCriterion("prepaid in", values, "prepaid");
            return (Criteria) this;
        }

        public Criteria andPrepaidNotIn(List<Boolean> values) {
            addCriterion("prepaid not in", values, "prepaid");
            return (Criteria) this;
        }

        public Criteria andPrepaidBetween(Boolean value1, Boolean value2) {
            addCriterion("prepaid between", value1, value2, "prepaid");
            return (Criteria) this;
        }

        public Criteria andPrepaidNotBetween(Boolean value1, Boolean value2) {
            addCriterion("prepaid not between", value1, value2, "prepaid");
            return (Criteria) this;
        }

        public Criteria andFreeCancelDateIsNull() {
            addCriterion("freeCancelDate is null");
            return (Criteria) this;
        }

        public Criteria andFreeCancelDateIsNotNull() {
            addCriterion("freeCancelDate is not null");
            return (Criteria) this;
        }

        public Criteria andFreeCancelDateEqualTo(Integer value) {
            addCriterion("freeCancelDate =", value, "freeCancelDate");
            return (Criteria) this;
        }

        public Criteria andFreeCancelDateNotEqualTo(Integer value) {
            addCriterion("freeCancelDate <>", value, "freeCancelDate");
            return (Criteria) this;
        }

        public Criteria andFreeCancelDateGreaterThan(Integer value) {
            addCriterion("freeCancelDate >", value, "freeCancelDate");
            return (Criteria) this;
        }

        public Criteria andFreeCancelDateGreaterThanOrEqualTo(Integer value) {
            addCriterion("freeCancelDate >=", value, "freeCancelDate");
            return (Criteria) this;
        }

        public Criteria andFreeCancelDateLessThan(Integer value) {
            addCriterion("freeCancelDate <", value, "freeCancelDate");
            return (Criteria) this;
        }

        public Criteria andFreeCancelDateLessThanOrEqualTo(Integer value) {
            addCriterion("freeCancelDate <=", value, "freeCancelDate");
            return (Criteria) this;
        }

        public Criteria andFreeCancelDateIn(List<Integer> values) {
            addCriterion("freeCancelDate in", values, "freeCancelDate");
            return (Criteria) this;
        }

        public Criteria andFreeCancelDateNotIn(List<Integer> values) {
            addCriterion("freeCancelDate not in", values, "freeCancelDate");
            return (Criteria) this;
        }

        public Criteria andFreeCancelDateBetween(Integer value1, Integer value2) {
            addCriterion("freeCancelDate between", value1, value2, "freeCancelDate");
            return (Criteria) this;
        }

        public Criteria andFreeCancelDateNotBetween(Integer value1, Integer value2) {
            addCriterion("freeCancelDate not between", value1, value2, "freeCancelDate");
            return (Criteria) this;
        }

        public Criteria andIsToAllIsNull() {
            addCriterion("isToAll is null");
            return (Criteria) this;
        }

        public Criteria andIsToAllIsNotNull() {
            addCriterion("isToAll is not null");
            return (Criteria) this;
        }

        public Criteria andIsToAllEqualTo(Boolean value) {
            addCriterion("isToAll =", value, "isToAll");
            return (Criteria) this;
        }

        public Criteria andIsToAllNotEqualTo(Boolean value) {
            addCriterion("isToAll <>", value, "isToAll");
            return (Criteria) this;
        }

        public Criteria andIsToAllGreaterThan(Boolean value) {
            addCriterion("isToAll >", value, "isToAll");
            return (Criteria) this;
        }

        public Criteria andIsToAllGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isToAll >=", value, "isToAll");
            return (Criteria) this;
        }

        public Criteria andIsToAllLessThan(Boolean value) {
            addCriterion("isToAll <", value, "isToAll");
            return (Criteria) this;
        }

        public Criteria andIsToAllLessThanOrEqualTo(Boolean value) {
            addCriterion("isToAll <=", value, "isToAll");
            return (Criteria) this;
        }

        public Criteria andIsToAllIn(List<Boolean> values) {
            addCriterion("isToAll in", values, "isToAll");
            return (Criteria) this;
        }

        public Criteria andIsToAllNotIn(List<Boolean> values) {
            addCriterion("isToAll not in", values, "isToAll");
            return (Criteria) this;
        }

        public Criteria andIsToAllBetween(Boolean value1, Boolean value2) {
            addCriterion("isToAll between", value1, value2, "isToAll");
            return (Criteria) this;
        }

        public Criteria andIsToAllNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isToAll not between", value1, value2, "isToAll");
            return (Criteria) this;
        }

        public Criteria andNumIsNull() {
            addCriterion("num is null");
            return (Criteria) this;
        }

        public Criteria andNumIsNotNull() {
            addCriterion("num is not null");
            return (Criteria) this;
        }

        public Criteria andNumEqualTo(Integer value) {
            addCriterion("num =", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotEqualTo(Integer value) {
            addCriterion("num <>", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumGreaterThan(Integer value) {
            addCriterion("num >", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("num >=", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumLessThan(Integer value) {
            addCriterion("num <", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumLessThanOrEqualTo(Integer value) {
            addCriterion("num <=", value, "num");
            return (Criteria) this;
        }

        public Criteria andNumIn(List<Integer> values) {
            addCriterion("num in", values, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotIn(List<Integer> values) {
            addCriterion("num not in", values, "num");
            return (Criteria) this;
        }

        public Criteria andNumBetween(Integer value1, Integer value2) {
            addCriterion("num between", value1, value2, "num");
            return (Criteria) this;
        }

        public Criteria andNumNotBetween(Integer value1, Integer value2) {
            addCriterion("num not between", value1, value2, "num");
            return (Criteria) this;
        }

        public Criteria andBedIsNull() {
            addCriterion("bed is null");
            return (Criteria) this;
        }

        public Criteria andBedIsNotNull() {
            addCriterion("bed is not null");
            return (Criteria) this;
        }

        public Criteria andBedEqualTo(Integer value) {
            addCriterion("bed =", value, "bed");
            return (Criteria) this;
        }

        public Criteria andBedNotEqualTo(Integer value) {
            addCriterion("bed <>", value, "bed");
            return (Criteria) this;
        }

        public Criteria andBedGreaterThan(Integer value) {
            addCriterion("bed >", value, "bed");
            return (Criteria) this;
        }

        public Criteria andBedGreaterThanOrEqualTo(Integer value) {
            addCriterion("bed >=", value, "bed");
            return (Criteria) this;
        }

        public Criteria andBedLessThan(Integer value) {
            addCriterion("bed <", value, "bed");
            return (Criteria) this;
        }

        public Criteria andBedLessThanOrEqualTo(Integer value) {
            addCriterion("bed <=", value, "bed");
            return (Criteria) this;
        }

        public Criteria andBedIn(List<Integer> values) {
            addCriterion("bed in", values, "bed");
            return (Criteria) this;
        }

        public Criteria andBedNotIn(List<Integer> values) {
            addCriterion("bed not in", values, "bed");
            return (Criteria) this;
        }

        public Criteria andBedBetween(Integer value1, Integer value2) {
            addCriterion("bed between", value1, value2, "bed");
            return (Criteria) this;
        }

        public Criteria andBedNotBetween(Integer value1, Integer value2) {
            addCriterion("bed not between", value1, value2, "bed");
            return (Criteria) this;
        }

        public Criteria andSoldIsNull() {
            addCriterion("sold is null");
            return (Criteria) this;
        }

        public Criteria andSoldIsNotNull() {
            addCriterion("sold is not null");
            return (Criteria) this;
        }

        public Criteria andSoldEqualTo(Integer value) {
            addCriterion("sold =", value, "sold");
            return (Criteria) this;
        }

        public Criteria andSoldNotEqualTo(Integer value) {
            addCriterion("sold <>", value, "sold");
            return (Criteria) this;
        }

        public Criteria andSoldGreaterThan(Integer value) {
            addCriterion("sold >", value, "sold");
            return (Criteria) this;
        }

        public Criteria andSoldGreaterThanOrEqualTo(Integer value) {
            addCriterion("sold >=", value, "sold");
            return (Criteria) this;
        }

        public Criteria andSoldLessThan(Integer value) {
            addCriterion("sold <", value, "sold");
            return (Criteria) this;
        }

        public Criteria andSoldLessThanOrEqualTo(Integer value) {
            addCriterion("sold <=", value, "sold");
            return (Criteria) this;
        }

        public Criteria andSoldIn(List<Integer> values) {
            addCriterion("sold in", values, "sold");
            return (Criteria) this;
        }

        public Criteria andSoldNotIn(List<Integer> values) {
            addCriterion("sold not in", values, "sold");
            return (Criteria) this;
        }

        public Criteria andSoldBetween(Integer value1, Integer value2) {
            addCriterion("sold between", value1, value2, "sold");
            return (Criteria) this;
        }

        public Criteria andSoldNotBetween(Integer value1, Integer value2) {
            addCriterion("sold not between", value1, value2, "sold");
            return (Criteria) this;
        }

        public Criteria andOtherIsNull() {
            addCriterion("other is null");
            return (Criteria) this;
        }

        public Criteria andOtherIsNotNull() {
            addCriterion("other is not null");
            return (Criteria) this;
        }

        public Criteria andOtherEqualTo(Integer value) {
            addCriterion("other =", value, "other");
            return (Criteria) this;
        }

        public Criteria andOtherNotEqualTo(Integer value) {
            addCriterion("other <>", value, "other");
            return (Criteria) this;
        }

        public Criteria andOtherGreaterThan(Integer value) {
            addCriterion("other >", value, "other");
            return (Criteria) this;
        }

        public Criteria andOtherGreaterThanOrEqualTo(Integer value) {
            addCriterion("other >=", value, "other");
            return (Criteria) this;
        }

        public Criteria andOtherLessThan(Integer value) {
            addCriterion("other <", value, "other");
            return (Criteria) this;
        }

        public Criteria andOtherLessThanOrEqualTo(Integer value) {
            addCriterion("other <=", value, "other");
            return (Criteria) this;
        }

        public Criteria andOtherIn(List<Integer> values) {
            addCriterion("other in", values, "other");
            return (Criteria) this;
        }

        public Criteria andOtherNotIn(List<Integer> values) {
            addCriterion("other not in", values, "other");
            return (Criteria) this;
        }

        public Criteria andOtherBetween(Integer value1, Integer value2) {
            addCriterion("other between", value1, value2, "other");
            return (Criteria) this;
        }

        public Criteria andOtherNotBetween(Integer value1, Integer value2) {
            addCriterion("other not between", value1, value2, "other");
            return (Criteria) this;
        }

        public Criteria andTierIsNull() {
            addCriterion("tier is null");
            return (Criteria) this;
        }

        public Criteria andTierIsNotNull() {
            addCriterion("tier is not null");
            return (Criteria) this;
        }

        public Criteria andTierEqualTo(Integer value) {
            addCriterion("tier =", value, "tier");
            return (Criteria) this;
        }

        public Criteria andTierNotEqualTo(Integer value) {
            addCriterion("tier <>", value, "tier");
            return (Criteria) this;
        }

        public Criteria andTierGreaterThan(Integer value) {
            addCriterion("tier >", value, "tier");
            return (Criteria) this;
        }

        public Criteria andTierGreaterThanOrEqualTo(Integer value) {
            addCriterion("tier >=", value, "tier");
            return (Criteria) this;
        }

        public Criteria andTierLessThan(Integer value) {
            addCriterion("tier <", value, "tier");
            return (Criteria) this;
        }

        public Criteria andTierLessThanOrEqualTo(Integer value) {
            addCriterion("tier <=", value, "tier");
            return (Criteria) this;
        }

        public Criteria andTierIn(List<Integer> values) {
            addCriterion("tier in", values, "tier");
            return (Criteria) this;
        }

        public Criteria andTierNotIn(List<Integer> values) {
            addCriterion("tier not in", values, "tier");
            return (Criteria) this;
        }

        public Criteria andTierBetween(Integer value1, Integer value2) {
            addCriterion("tier between", value1, value2, "tier");
            return (Criteria) this;
        }

        public Criteria andTierNotBetween(Integer value1, Integer value2) {
            addCriterion("tier not between", value1, value2, "tier");
            return (Criteria) this;
        }

        public Criteria andRestIsNull() {
            addCriterion("rest is null");
            return (Criteria) this;
        }

        public Criteria andRestIsNotNull() {
            addCriterion("rest is not null");
            return (Criteria) this;
        }

        public Criteria andRestEqualTo(Integer value) {
            addCriterion("rest =", value, "rest");
            return (Criteria) this;
        }

        public Criteria andRestNotEqualTo(Integer value) {
            addCriterion("rest <>", value, "rest");
            return (Criteria) this;
        }

        public Criteria andRestGreaterThan(Integer value) {
            addCriterion("rest >", value, "rest");
            return (Criteria) this;
        }

        public Criteria andRestGreaterThanOrEqualTo(Integer value) {
            addCriterion("rest >=", value, "rest");
            return (Criteria) this;
        }

        public Criteria andRestLessThan(Integer value) {
            addCriterion("rest <", value, "rest");
            return (Criteria) this;
        }

        public Criteria andRestLessThanOrEqualTo(Integer value) {
            addCriterion("rest <=", value, "rest");
            return (Criteria) this;
        }

        public Criteria andRestIn(List<Integer> values) {
            addCriterion("rest in", values, "rest");
            return (Criteria) this;
        }

        public Criteria andRestNotIn(List<Integer> values) {
            addCriterion("rest not in", values, "rest");
            return (Criteria) this;
        }

        public Criteria andRestBetween(Integer value1, Integer value2) {
            addCriterion("rest between", value1, value2, "rest");
            return (Criteria) this;
        }

        public Criteria andRestNotBetween(Integer value1, Integer value2) {
            addCriterion("rest not between", value1, value2, "rest");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table drs
     *
     * @mbg.generated do_not_delete_during_merge Tue Aug 07 09:44:00 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table drs
     *
     * @mbg.generated Tue Aug 07 09:44:00 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}